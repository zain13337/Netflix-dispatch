"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[758],{4137:(t,e,n)=>{n.d(e,{Zo:()=>u,kt:()=>m});var r=n(7294);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,r,i=function(t,e){if(null==t)return{};var n,r,i={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}var p=r.createContext({}),l=function(t){var e=r.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},u=function(t){var e=l(t.components);return r.createElement(p.Provider,{value:e},t.children)},c="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},g=r.forwardRef((function(t,e){var n=t.components,i=t.mdxType,o=t.originalType,p=t.parentName,u=s(t,["components","mdxType","originalType","parentName"]),c=l(n),g=i,m=c["".concat(p,".").concat(g)]||c[g]||d[g]||o;return n?r.createElement(m,a(a({ref:e},u),{},{components:n})):r.createElement(m,a({ref:e},u))}));function m(t,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var o=n.length,a=new Array(o);a[0]=g;var s={};for(var p in e)hasOwnProperty.call(e,p)&&(s[p]=e[p]);s.originalType=t,s[c]="string"==typeof t?t:i,a[1]=s;for(var l=2;l<o;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},4468:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>p,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=n(7462),i=(n(7294),n(4137));const o={description:"How to test your plugins."},a="Testing",s={unversionedId:"administration/contributing/plugins/testing",id:"administration/contributing/plugins/testing",title:"Testing",description:"How to test your plugins.",source:"@site/docs/administration/contributing/plugins/testing.mdx",sourceDirName:"administration/contributing/plugins",slug:"/administration/contributing/plugins/testing",permalink:"/dispatch/docs/administration/contributing/plugins/testing",draft:!1,editUrl:"https://github.com/netflix/dispatch/edit/master/docs/docs/administration/contributing/plugins/testing.mdx",tags:[],version:"current",frontMatter:{description:"How to test your plugins."},sidebar:"adminSidebar",previous:{title:"Interfaces",permalink:"/dispatch/docs/administration/contributing/plugins/interfaces"},next:{title:"FAQ",permalink:"/dispatch/docs/administration/faq"}},p={},l=[{value:"Require Dispatch",id:"require-dispatch",level:2},{value:"Running Tests",id:"running-tests",level:2}],u={toc:l},c="wrapper";function d(t){let{components:e,...n}=t;return(0,i.kt)(c,(0,r.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"testing"},"Testing"),(0,i.kt)("p",null,"Dispatch provides a basic test-based testing framework for plugins. In a simple plugin, you'll need to do a few things to get it working:"),(0,i.kt)("h2",{id:"require-dispatch"},"Require Dispatch"),(0,i.kt)("p",null,"Augment your plugins ",(0,i.kt)("inlineCode",{parentName:"p"},"setup.py")," to ensure that it depends on ",(0,i.kt)("inlineCode",{parentName:"p"},"dispatch")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"setup(\n    # ...\n    install_requires=[\n       'dispatch',\n    ]\n)\n")),(0,i.kt)("h2",{id:"running-tests"},"Running Tests"),(0,i.kt)("p",null,"Running tests follows the py.test standard. As long as your test files and methods are named appropriately ","(",(0,i.kt)("inlineCode",{parentName:"p"},"test_filename.py")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"test_function()"),")"," you can call out to py.test:"))}d.isMDXComponent=!0}}]);